These tests can be used to verify standards compliance of PowerDNS and to
spot regressions.

Start PowerDNS with --no-shuffle for best results - the 'too-big-udp' test
fails otherwise, for cosmetical reasons.

Method of operation
-------------------

Each directory contains a command that, when executed, proces the 'cleandig'
output for the answer the nameserver sent. This output is stored in the file
'real_result', and compared to 'expected_result'. 

Then, 'diff -u' is run on those two files, and the output sent to the file
'diff'. If everything is as it should be, this diff file is empty, and
PowerDNS passed the test.

Caveats
-------

Optional features of the DNS standard can cause a difference to arrise. For
example, 'Bind 8' appears to fail on nearly all our tests, whereas it is in
compliance (except for one case).

Study the diff output to be sure if there is a problem.

How to run
----------

First make sure PowerDNS has access to the testing zones, which are all
referred in the 'named.conf' file. Use the 'zone2sql' tool to create sql and
feed it to your database if you want to test one of the sql backends.

Run PowerDNS as (to test gmysql):

$ ../pdns/pdns_server --daemon=no --local-port=5300 --socket-dir=./  \
--no-shuffle --launch=gmysql --gmysql-dbname=pdnstest --gmysql-user=root \
--fancy-records --query-logging --send-root-referral --loglevel=9 \
--cache-ttl=0 --no-config

or (to test bind, without DNSSEC):
$ ../pdns/pdns_server --daemon=no --local-port=5300 --socket-dir=./  \
--no-shuffle --launch=bind --bind-config=./named.conf                \
--fancy-records --query-logging --send-root-referral --loglevel=9    \
--cache-ttl=0 --no-config

or (to test bind,gsqlite3):

$ ./bind-gsqlite3-setup
$ ../pdns/pdns_server --daemon=no --local-port=5300 --socket-dir=./  \
--no-shuffle --launch=bind,gsqlite3 --bind-config=./named.conf       \
--gsqlite3-database=./powerdns.sqlite3 --gsqlite3-dnssec             \
--fancy-records --query-logging --send-root-referral --loglevel=9    \
--cache-ttl=0 --no-config


Or only sqlite3:
$ ../pdns/pdns_server --daemon=no --local-port=5300 --socket-dir=./  \
--no-shuffle --launch=gsqlite3 \
--gsqlite3-database=./powerdns.sqlite3 --gsqlite3-dnssec             \
--fancy-records --query-logging --send-root-referral --loglevel=9    \
--cache-ttl=0 --no-config


Set the 'nameserver' and 'port' variables to point to your pdns_server
instance:

$ nameserver=127.0.0.1 port=5300 ./runtests

The BIND backend can't do MBOXFW. The 'any-query' test is known to fail
with bind,gsqlite3.

Analysing results
-----------------

Failed tests appear in the file 'failed_tests', passed tests in
'passed_tests'. A complete log is in the file 'log'. Examine the 'diff'
files in all subdirectories to see what happened.
